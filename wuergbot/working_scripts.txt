import multiprocessing
import time
import prozess0

def nutzerschnittstelle(p1, p2):
    try:
        while True:
            interrupt = input("Interrupt? (yes/no): ")
            if interrupt.lower() == "yes":
                p1.terminate()
                p2.terminate()
                break

            time.sleep(60)
    except KeyboardInterrupt:
        p1.terminate()
        p2.terminate()

if __name__ == "__main__":
    multiprocessing.set_start_method('spawn')
    prozess0_handle = multiprocessing.Process(target=prozess0.starte)
    prozess0_handle.start()
    
    # Get process handles
    p1_handle = prozess0.get_prozess1_handle()
    p2_handle = prozess0.get_prozess2_handle()
    
    # Start user interface
    nutzerschnittstelle(p1_handle, p2_handle)


#def nutzerschnittstelle(p1, p2):
#    try:
#        while True:
#            interrupt = input("Interrupt? (yes/no): ")
#            if interrupt.lower() == "yes":
#                p1.terminate()
#                p2.terminate()
#                break
#
#            time.sleep(60)
#    except KeyboardInterrupt:
#        p1.terminate()
#        p2.terminate()


#if __name__ == "__main__":
#    multiprocessing.set_start_method('spawn')
#    prozess0_handle = multiprocessing.Process(target=prozess0)
#    prozess0_handle.start()
#    nutzerschnittstelle(get_prozess1_handle(), get_prozess2_handle())import multiprocessing
import time
import prozess1
import prozess2

def monitoring(p1, p2):
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        p1.terminate()
        p2.terminate()

def get_prozess1_handle():
    return intern_eorhenGeinfkLjf   

def get_prozess2_handle():
    return intern_ipenOoeonPPioiw   

def starte():
    prozess1_handle = get_prozess1_handle()
    prozess2_handle = get_prozess2_handle()
    prozess1_handle.start()
    prozess2_handle.start()
    monitoring(prozess1_handle, prozess2_handle)

intern_eorhenGeinfkLjf=multiprocessing.Process(target=prozess1.verarbeite)
intern_ipenOoeonPPioiw=multiprocessing.Process(target=prozess2.verarbeite)
if __name__ == "__main__":
    starte()
import time
import os

def verarbeite():
    while True:
        os.system("ls /")
        
if __name__ == "__main__":
    verarbeite()
import time
import os

def verarbeite():
    while True:
        os.system("ping google -c 6000")

if __name__ == "__main__":
    verarbeite()
