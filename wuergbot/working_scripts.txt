#-----SCRIPTFILE BEGIN------
import multiprocessing
import time
import prozess0
# Global variables to store process handles
p1_handle = None
p2_handle = None
p0_handle = None

def nutzerschnittstelle():
    global p1_handle, p2_handle
    try:
        while True:
            interrupt = input("Interrupt? (yes/no): ")
            if interrupt.lower() == "yes":
                p1_handle.terminate()
                p2_handle.terminate()
                p0_handle.terminate()
                break
    except KeyboardInterrupt:
        p1_handle.terminate()
        p2_handle.terminate()
        p0_handle.terminate()

if __name__ == "__main__":
    multiprocessing.set_start_method('spawn')
    p0_handle = multiprocessing.Process(target=prozess0.starte)
    p0_handle.start()
    p1_handle = prozess0.get_prozess1_handle()
    p2_handle = prozess0.get_prozess2_handle()
    
    nutzerschnittstelle()
#-----SCRIPTFILE BEGIN------
#-----SCRIPTFILE END------
import multiprocessing
import time
import prozess1
import prozess2

intern_eorhenGeinfkLjf = None
intern_ipenOoeonPPioiw = None

def monitoring(p1, p2, wielange):
    try:
        while True:
            # Output the current status of prozess1
            print("Status of Prozesses:")
            print("p1 is running" if p1.is_alive() else "p1 is NOT running")
            print("p2 is running" if p2.is_alive() else "p2 is NOT running")
            print(f"sleeping {wielange} seconds...")

            time.sleep(wielange)  # Wait seconds
    except KeyboardInterrupt:
        p1.terminate()
        p2.terminate()

def get_prozess1_handle():
    return intern_eorhenGeinfkLjf   


def get_prozess2_handle():
    return intern_ipenOoeonPPioiw   

def starte():
    global intern_eorhenGeinfkLjf
    global intern_ipenOoeonPPioiw
    intern_eorhenGeinfkLjf=multiprocessing.Process(target=prozess1.verarbeite)
    intern_ipenOoeonPPioiw=multiprocessing.Process(target=prozess2.verarbeite)
    prozess1_handle = get_prozess1_handle()
    prozess2_handle = get_prozess2_handle()
    prozess1_handle.start()
    prozess2_handle.start()
    monitoring(prozess1_handle, prozess2_handle, 30)
if __name__ == "__main__":
    starte()import time
#-----SCRIPTFILE BEGIN------
#-----SCRIPTFILE END------
import os

def verarbeite():
    while True:
        os.system("ls / >> wuerglog.log 2>&1")

if __name__ == "__main__":
    verarbeite()
import time
import os

#-----SCRIPTFILE BEGIN------
#-----SCRIPTFILE END------
def verarbeite():
    while True:
        os.system("ping google -c 6000  >> wuerglog.log 2>&1")

if __name__ == "__main__":
    verarbeite()
#-----SCRIPTFILE END------

Here is the output:
Interrupt? (yes/no): Status of Prozesses:
p1 is running
p2 is running
sleeping 30 seconds...
yes
Traceback (most recent call last):
  File "/home/mima/repos/upstream/mmatgithub/wuergeschlange/wuergbot/parallel.py", line 31, in <module>
    nutzerschnittstelle()
  File "/home/mima/repos/upstream/mmatgithub/wuergeschlange/wuergbot/parallel.py", line 15, in nutzerschnittstelle
    p1_handle.terminate()
AttributeError: 'NoneType' object has no attribute 'terminate'

Please fixt the issue.